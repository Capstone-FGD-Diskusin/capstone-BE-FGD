// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	likes "github.com/dragranzer/capstone-BE-FGD/features/likes"
	mock "github.com/stretchr/testify/mock"
)

// Bussiness is an autogenerated mock type for the Bussiness type
type Bussiness struct {
	mock.Mock
}

// DeleteLikebyThreadId provides a mock function with given fields: data
func (_m *Bussiness) DeleteLikebyThreadId(data likes.Core) error {
	ret := _m.Called(data)

	var r0 error
	if rf, ok := ret.Get(0).(func(likes.Core) error); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetThreadHome provides a mock function with given fields: data
func (_m *Bussiness) GetThreadHome(data likes.Core) ([]likes.Core, error) {
	ret := _m.Called(data)

	var r0 []likes.Core
	if rf, ok := ret.Get(0).(func(likes.Core) []likes.Core); ok {
		r0 = rf(data)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]likes.Core)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(likes.Core) error); ok {
		r1 = rf(data)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// LikingThread provides a mock function with given fields: data
func (_m *Bussiness) LikingThread(data likes.Core) error {
	ret := _m.Called(data)

	var r0 error
	if rf, ok := ret.Get(0).(func(likes.Core) error); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UnlikingThread provides a mock function with given fields: data
func (_m *Bussiness) UnlikingThread(data likes.Core) error {
	ret := _m.Called(data)

	var r0 error
	if rf, ok := ret.Get(0).(func(likes.Core) error); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
