// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	likes "github.com/dragranzer/capstone-BE-FGD/features/likes"
	mock "github.com/stretchr/testify/mock"
)

// Data is an autogenerated mock type for the Data type
type Data struct {
	mock.Mock
}

// CheckLiked provides a mock function with given fields: data
func (_m *Data) CheckLiked(data likes.Core) (bool, error) {
	ret := _m.Called(data)

	var r0 bool
	if rf, ok := ret.Get(0).(func(likes.Core) bool); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(likes.Core) error); ok {
		r1 = rf(data)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteLike provides a mock function with given fields: data
func (_m *Data) DeleteLike(data likes.Core) error {
	ret := _m.Called(data)

	var r0 error
	if rf, ok := ret.Get(0).(func(likes.Core) error); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteLikebyThreadId provides a mock function with given fields: data
func (_m *Data) DeleteLikebyThreadId(data likes.Core) error {
	ret := _m.Called(data)

	var r0 error
	if rf, ok := ret.Get(0).(func(likes.Core) error); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// InsertLike provides a mock function with given fields: data
func (_m *Data) InsertLike(data likes.Core) error {
	ret := _m.Called(data)

	var r0 error
	if rf, ok := ret.Get(0).(func(likes.Core) error); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
