// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	categories "github.com/dragranzer/capstone-BE-FGD/features/categories"
	mock "github.com/stretchr/testify/mock"
)

// Bussiness is an autogenerated mock type for the Bussiness type
type Bussiness struct {
	mock.Mock
}

// AddCategory provides a mock function with given fields: data
func (_m *Bussiness) AddCategory(data categories.Core) error {
	ret := _m.Called(data)

	var r0 error
	if rf, ok := ret.Get(0).(func(categories.Core) error); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteCategorybyId provides a mock function with given fields: data
func (_m *Bussiness) DeleteCategorybyId(data categories.Core) error {
	ret := _m.Called(data)

	var r0 error
	if rf, ok := ret.Get(0).(func(categories.Core) error); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// EditCategory provides a mock function with given fields: data
func (_m *Bussiness) EditCategory(data categories.Core) error {
	ret := _m.Called(data)

	var r0 error
	if rf, ok := ret.Get(0).(func(categories.Core) error); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAllCategory provides a mock function with given fields: data
func (_m *Bussiness) GetAllCategory(data categories.Core) ([]categories.Core, error) {
	ret := _m.Called(data)

	var r0 []categories.Core
	if rf, ok := ret.Get(0).(func(categories.Core) []categories.Core); ok {
		r0 = rf(data)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]categories.Core)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(categories.Core) error); ok {
		r1 = rf(data)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCategorybyId provides a mock function with given fields: data
func (_m *Bussiness) GetCategorybyId(data categories.Core) (categories.Core, error) {
	ret := _m.Called(data)

	var r0 categories.Core
	if rf, ok := ret.Get(0).(func(categories.Core) categories.Core); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Get(0).(categories.Core)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(categories.Core) error); ok {
		r1 = rf(data)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCategorybyName provides a mock function with given fields: data
func (_m *Bussiness) GetCategorybyName(data categories.Core) (categories.Core, error) {
	ret := _m.Called(data)

	var r0 categories.Core
	if rf, ok := ret.Get(0).(func(categories.Core) categories.Core); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Get(0).(categories.Core)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(categories.Core) error); ok {
		r1 = rf(data)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
